buildscript {
	ext.commonsIoVersion = '2.6'
	ext.guavaVersion = '24.0-jre'
	ext.hamcrestVersion = '1.3'
	ext.klaxonVersion = '0.32'
	ext.kotlinCoroutinesVersion = '0.22.3'
	ext.kotlinVersion = '1.2.21'
	ext.logbackVersion = '1.2.3'
	ext.lombokVersion = '1.16.20'
	ext.okhttpVersion = '3.9.1'
	ext.slf4jVersion = '1.7.25'
	ext.testngVersion = '6.14.3'
	
	repositories {
		mavenLocal()
		jcenter()
		maven { url "https://plugins.gradle.org/m2/" }
	}
	dependencies {
		// kotlin
		classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
		classpath "org.jetbrains.dokka:dokka-gradle-plugin:0.9.16"
		
		// licenser
		classpath "gradle.plugin.net.minecrell:licenser:0.3"
		
		// code coverage
		classpath "com.palantir:jacoco-coverage:0.4.0"
		classpath "com.github.ksoichiro:gradle-console-reporter:0.5.0"
		
		// version check
		classpath "com.github.ben-manes:gradle-versions-plugin:0.17.0"

		// artifactory
		classpath "org.jfrog.buildinfo:build-info-extractor-gradle:+"

	}
}

allprojects {
	group 'msrd0.matrix'
	version "$matrix_client_version"
	
	apply plugin: 'java'
	apply plugin: 'com.github.ben-manes.versions'
	
	apply plugin: 'net.minecrell.licenser'
	license {
		header = project.file('HEADER.txt')
		include '**/*.kt', '**/*.java'
		ignoreFailures = true
	}
	
	repositories {
		mavenLocal()
		jcenter()
		maven { url "https://maven.nextgenenergy.co.nz/artifactory/maven/" }
	}
	
	dependencies {
		// java lombok annotations
		compileOnly "org.projectlombok:lombok:$lombokVersion"
		
		// logging
		compile "org.slf4j:slf4j-api:$slf4jVersion"
		
		// test stuff
		testCompile "org.testng:testng:$testngVersion"
		testCompile "org.hamcrest:hamcrest-integration:$hamcrestVersion"
		testCompile "ch.qos.logback:logback-classic:$logbackVersion"
	}
	
	sourceCompatibility = "1.8"
	
	test {
		useTestNG()
		testLogging.showStandardStreams = true
	}
	
	task sourcesJar(type : Jar) {
		from sourceSets.main.allSource
	}
}

configure(allprojects - project('matrix-client-cli')) {
	
	apply plugin: 'kotlin'
	apply plugin: "com.palantir.jacoco-full-report"
	apply plugin: "com.github.ksoichiro.console.reporter"
	
	dependencies {
		// stdlib
		compile "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
		compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlinVersion"
		compile "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinCoroutinesVersion"
	}
	
	sourceSets {
		main {
			kotlin.srcDirs = ['src/']
			java.srcDirs = ['src/']
			resources.srcDirs = ['res/']
		}
		test {
			kotlin.srcDirs = ['test/src/']
			java.srcDirs = []
			resources.srcDirs = ['test/res/']
		}
	}
	
	compileKotlin {
		kotlinOptions.jvmTarget = "1.8"
	}
	compileTestKotlin {
		kotlinOptions.jvmTarget = "1.8"
	}
	kotlin {
		experimental {
			coroutines 'enable'
		}
	}
	
	apply plugin: "org.jetbrains.dokka"
	
	dokka {
		outputFormat = "javadoc"
		outputDirectory = "$buildDir/javadoc"
		
		jdkVersion = 8
		impliedPlatforms = ["JVM"]
		
		linkMapping {
			dir = "src/"
			url = "https://gitlab.com/mextrix/matrix-client/tree/master/src"
			suffix = "#L"
		}
	}
	build {
		dependsOn "dokka"
	}

	apply plugin: 'com.jfrog.artifactory'
	apply plugin: 'maven-publish'
	
	publishing {
		publications {
			mavenKotlin(MavenPublication) {
				from components.java
				
				artifact sourcesJar {
					classifier "sources"
				}
				
				pom.withXml {
					asNode()
						.appendNode('licenses')
							.appendNode('license')
								.appendNode('name', "GNU General Public License, Version 3")
									.parent()
								.appendNode('url', "http://gnu.org/licenses/gpl-3.0")
									.parent()
								.appendNode('distribution', "repo")
									.parent()
								.appendNode('comments', "A copyleft license for free open source software")
				}
			}
		}
	}

	artifactory {
		contextUrl = 'https://maven.nextgenenergy.co.nz/artifactory'
		resolve {
			repository {
				repoKey = 'maven'
			}
		}
		publish {
				repository {
				repoKey = 'maven-local'
				username = 'gitlab-ci'
				password = System.getenv("ARTIFACTORY_PASSWORD")
				maven = true
			}
			defaults {
				 publications('mavenKotlin')
			}
		}
	}

	
}

dependencies {
	
	// apache commons
	compile "commons-io:commons-io:$commonsIoVersion"
	
	// http lib
	compile "com.squareup.okhttp3:okhttp:$okhttpVersion"
	
	// json lib
	compile "com.beust:klaxon:$klaxonVersion"
	
	// olm java
	compile "msrd0.matrix:matrix-olm-java:2.+"
}
