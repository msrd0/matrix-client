group 'msrd0.matrix'
version "$matrix_client_version"

buildscript {
	ext.kotlin_version = '1.1.+'
	
	repositories {
		mavenLocal()
		jcenter()
		maven { url "https://plugins.gradle.org/m2/" }
	}
	dependencies {
		// kotlin
		classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
		classpath "org.jetbrains.dokka:dokka-gradle-plugin:+"
		
		// licenser
		classpath "gradle.plugin.net.minecrell:licenser:0.3"
		
		// code coverage
		classpath "com.palantir:jacoco-coverage:0.4.+"
		classpath "com.github.ksoichiro:gradle-console-reporter:0.5.+"
		
		// jfrog artifactory
		classpath "org.jfrog.buildinfo:build-info-extractor-gradle:+"
	}
}

apply plugin: 'kotlin'
apply plugin: "com.palantir.jacoco-full-report"
apply plugin: "com.github.ksoichiro.console.reporter"

allprojects {
	apply plugin: 'net.minecrell.licenser'
	license {
		header = project.file('HEADER.txt')
		include '**/*.kt', '**/*.java'
		ignoreFailures = true
	}
	
	repositories {
		mavenLocal()
		jcenter()
		maven { url "https://msrd0.duckdns.org/artifactory/gradle" }
	}
}

dependencies {
	// stdlib
	compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
	compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"
	
	// java lombok annotations
	compileOnly "org.projectlombok:lombok:1.16.+"
	
	// apache commons
	compile 'commons-io:commons-io:2.5'
	
	// http lib
	compile "com.squareup.okhttp3:okhttp:3.8.+"
	
	// json lib
	compile "com.beust:klaxon:0.32-SNAPSHOT"
	
	// olm java
	compile "msrd0.matrix:matrix-olm-java:+"
	
	// logging
	compile "org.slf4j:slf4j-api:1.7.+"
	
	// test stuff
	testCompile "org.testng:testng:6.+"
	testCompile "org.hamcrest:hamcrest-integration:1.+"
	testCompile "ch.qos.logback:logback-classic:1.+"
}

sourceSets {
	main {
		kotlin.srcDirs = ['src/']
		java.srcDirs = ['src/']
		resources.srcDirs = ['res/']
	}
	test {
		kotlin.srcDirs = ['test/src/']
		java.srcDirs = []
		resources.srcDirs = ['test/res/']
	}
}

compileKotlin {
	kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
	kotlinOptions.jvmTarget = "1.8"
}

test {
	useTestNG()
	testLogging.showStandardStreams = true
}

apply plugin: "org.jetbrains.dokka"

dokka {
	outputFormat = "javadoc"
	outputDirectory = "$buildDir/javadoc"
	
	jdkVersion = 8
	impliedPlatforms = ["JVM"]
	
	linkMapping {
		dir = "src/"
		url = "https://gitlab.com/mextrix/matrix-client/tree/master/src"
		suffix = "#L"
	}
}
build {
	dependsOn "dokka"
}


apply plugin: 'com.jfrog.artifactory'
apply plugin: 'maven-publish'

publishing {
	publications {
		mavenKotlin(MavenPublication) {
			from components.java
			pom.withXml {
				asNode()
					.appendNode('licenses')
						.appendNode('license')
							.appendNode('name', "GNU General Public License, Version 3")
								.parent()
							.appendNode('url', "http://gnu.org/licenses/gpl-3.0")
								.parent()
							.appendNode('distribution', "repo")
								.parent()
							.appendNode('comments', "A copyleft license for free open source software")
			}
		}
	}
}

artifactory {
	contextUrl = 'https://msrd0.duckdns.org/artifactory'
	resolve {
		repository {
			repoKey = 'gradle'
		}
	}
	publish {
		repository {
			repoKey = 'local'
			username = 'gitlab-ci'
			password = System.getenv("ARTIFACTORY_PASSWORD")
			maven = true
		}
		defaults {
			publications('mavenKotlin')
		}
	}
}

artifactoryPublish {
	dependsOn jar
}
